/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace com.axia {

public class AxVoiceMessage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AxVoiceMessage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AxVoiceMessage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AxVoiceMessage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          axvoicePINVOKE.delete_AxVoiceMessage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual AxVoiceMessage.Type getType() {
    AxVoiceMessage.Type ret = (AxVoiceMessage.Type)axvoicePINVOKE.AxVoiceMessage_getType(swigCPtr);
    return ret;
  }

  public virtual uint getVoiceID() {
    uint ret = axvoicePINVOKE.AxVoiceMessage_getVoiceID(swigCPtr);
    return ret;
  }

  public virtual int getParamCounts() {
    int ret = axvoicePINVOKE.AxVoiceMessage_getParamCounts(swigCPtr);
    return ret;
  }

  public virtual string getParam(int index) {
    string ret = axvoicePINVOKE.AxVoiceMessage_getParam(swigCPtr, index);
    return ret;
  }

  public AxVoiceMessage() : this(axvoicePINVOKE.new_AxVoiceMessage(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("getType", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateAxVoiceMessage_0(SwigDirectorgetType);
    if (SwigDerivedClassHasMethod("getVoiceID", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateAxVoiceMessage_1(SwigDirectorgetVoiceID);
    if (SwigDerivedClassHasMethod("getParamCounts", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateAxVoiceMessage_2(SwigDirectorgetParamCounts);
    if (SwigDerivedClassHasMethod("getParam", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateAxVoiceMessage_3(SwigDirectorgetParam);
    axvoicePINVOKE.AxVoiceMessage_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(AxVoiceMessage));
    return hasDerivedMethod;
  }

  private int SwigDirectorgetType() {
    return (int)getType();
  }

  private uint SwigDirectorgetVoiceID() {
    return getVoiceID();
  }

  private int SwigDirectorgetParamCounts() {
    return getParamCounts();
  }

  private string SwigDirectorgetParam(int index) {
    return getParam(index);
  }

  public delegate int SwigDelegateAxVoiceMessage_0();
  public delegate uint SwigDelegateAxVoiceMessage_1();
  public delegate int SwigDelegateAxVoiceMessage_2();
  public delegate string SwigDelegateAxVoiceMessage_3(int index);

  private SwigDelegateAxVoiceMessage_0 swigDelegate0;
  private SwigDelegateAxVoiceMessage_1 swigDelegate1;
  private SwigDelegateAxVoiceMessage_2 swigDelegate2;
  private SwigDelegateAxVoiceMessage_3 swigDelegate3;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(int) };
  public enum Type {
    MT_RECORD_MSG = 1,
    MT_UPLOAD_MSG = 2,
    MT_DOWNLOAD_MSG = 3,
    MT_PLAY_MSG = 4
  }

}

}
